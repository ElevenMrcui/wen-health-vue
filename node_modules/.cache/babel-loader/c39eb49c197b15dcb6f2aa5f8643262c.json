{"remainingRequest":"D:\\JavaProgram\\VSCode\\health114\\node_modules\\babel-loader\\lib\\index.js!D:\\JavaProgram\\VSCode\\health114\\src\\main.js","dependencies":[{"path":"D:\\JavaProgram\\VSCode\\health114\\src\\main.js","mtime":1604539609000},{"path":"D:\\JavaProgram\\VSCode\\health114\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604539599577},{"path":"D:\\JavaProgram\\VSCode\\health114\\node_modules\\babel-loader\\lib\\index.js","mtime":1604539598881}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJEOlxcSmF2YVByb2dyYW1cXFZTQ29kZVxcaGVhbHRoMTE0XFxub2RlX21vZHVsZXNcXGNvcmUtanNcXG1vZHVsZXNcXGVzLmFycmF5Lml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJEOlxcSmF2YVByb2dyYW1cXFZTQ29kZVxcaGVhbHRoMTE0XFxub2RlX21vZHVsZXNcXGNvcmUtanNcXG1vZHVsZXNcXGVzLnByb21pc2UuanMiOwppbXBvcnQgIkQ6XFxKYXZhUHJvZ3JhbVxcVlNDb2RlXFxoZWFsdGgxMTRcXG5vZGVfbW9kdWxlc1xcY29yZS1qc1xcbW9kdWxlc1xcZXMub2JqZWN0LmFzc2lnbi5qcyI7CmltcG9ydCAiRDpcXEphdmFQcm9ncmFtXFxWU0NvZGVcXGhlYWx0aDExNFxcbm9kZV9tb2R1bGVzXFxjb3JlLWpzXFxtb2R1bGVzXFxlcy5wcm9taXNlLmZpbmFsbHkuanMiOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBBcHAgZnJvbSAnLi9BcHAudnVlJzsKaW1wb3J0IHJvdXRlciBmcm9tICcuL3JvdXRlcic7CmltcG9ydCBzdG9yZSBmcm9tICcuL3N0b3JlJzsKaW1wb3J0IEVsZW1lbnRVSSBmcm9tICdlbGVtZW50LXVpJzsKaW1wb3J0ICdlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9pbmRleC5jc3MnOwpWdWUudXNlKEVsZW1lbnRVSSk7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBlY2hhcnRzIGZyb20gJ2VjaGFydHMnOwpWdWUucHJvdG90eXBlLiRlY2hhcnRzID0gZWNoYXJ0czsKVnVlLmNvbmZpZy5wcm9kdWN0aW9uVGlwID0gZmFsc2U7ClZ1ZS5wcm90b3R5cGUuJGh0dHAgPSBheGlvczsgLy8gIOWumuS5ieW8guatpeivt+axgiDmi6bmiKrlmagg5omA5pyJ55qEYXhpb3Por7fmsYIg5Y+R6YCB5LmL5YmNIOmDveS8muaQuuW4piBoZWFkZXJzLmF1dGhlbnRpY2F0aW9uICB0b2tlbuaVsOaNrgovLyBheGlvcy5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoY29uZmlnID0+IHsKLy8gICBjb25zb2xlLmxvZyhjb25maWcpCi8vICAgY29uZmlnLmhlYWRlcnMuYXV0aGVudGljYXRpb24gPSB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgidG9rZW4iKQovLyAgIHJldHVybiBjb25maWc7Ci8vIH0sIAovLyBmdW5jdGlvbiAoZXJyb3IpIHsKLy8gICAvLyDlr7nor7fmsYLplJnor6/lgZrkupvku4DkuYgKLy8gICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwovLyB9Ci8vICkKLy8gaHR0cCByZXNwb25zZSDmi6bmiKrlmagKLy8gYXhpb3MuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZSgKLy8gICByZXNwb25zZSA9PiB7Ci8vICAgICAgLy8gIOWvueWTjeW6lOaVsOaNriDlpITnkIYKLy8gICAgICAgcmV0dXJuIHJlc3BvbnNlOwovLyAgIH0sCi8vICAgZXJyb3IgPT4gewovLyAgICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7Ci8vICAgICAgIHN3aXRjaCAoZXJyb3IucmVzcG9uc2Uuc3RhdHVzKSB7Ci8vICAgICAgICAgICBjYXNlIDQwMzoKLy8gICAgICAgICAgICAgICAvLyDov5Tlm54gNDAzIOi9rOWIsOeZu+W9lemhtemdogovLyAgICAgICAgICAgICAgICAvL+i3s+i9rOWIsOS4u+mhtQovLyAgICAgICAgICAgICAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgidG9rZW4iKQovLyAgICAgICAgICAgICAgICByb3V0ZXIucmVwbGFjZSh7IG5hbWU6ICJsb2dpbiIgfSk7Ci8vICAgICAgIH0KLy8gICB9Ci8vICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvci5yZXNwb25zZS5kYXRhKSAgIC8vIOi/lOWbnuaOpeWPo+i/lOWbnueahOmUmeivr+S/oeaBrwovLyAgIH0pOwovLyAg5a6a5LmJ6Lev55Sx5oum5oiqCi8vIOivreazlSDvvJpyb3V0ZXIuYmVmb3JlRWFjaO+8iO+8ieS4gOiIrOeUqOadpeWBmuS4gOS6m+i/m+WFpemhtemdoueahOmZkOWItuOAguavlOWmguayoeacieeZu+W9le+8jOWwseS4jeiDvei/m+WFpeafkOS6m+mhtemdou+8jAovLyDlj6rmnInnmbvlvZXkuobkuYvlkI7miY3mnInmnYPpmZDmn6XnnIvmn5DkupvpobXpnaLjgIIgIHRvIOihqOekuumcgOimgeiuv+mXrueahOebruagh3JvdXRlciAgbmV4dCDooajnpLrlj6/ku6Xorr/pl64KLy8gcm91dGVyLmJlZm9yZUVhY2goKHRvLGZyb20sbmV4dCk9PnsKLy8gICBpZih0by5uYW1lICE9ICdsb2dpbicpewovLyAgICAgaWYod2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oInRva2VuIikpewovLyAgICAgICBuZXh0KCkKLy8gICAgIH1lbHNlewovLyAgICAgICBuZXh0KHtwYXRoOicvJ30pCi8vICAgICB9Ci8vICAgfWVsc2V7Ci8vICAgICBuZXh0KCkKLy8gICB9IAovLyB9KQoKbmV3IFZ1ZSh7CiAgcm91dGVyOiByb3V0ZXIsCiAgc3RvcmU6IHN0b3JlLAogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHsKICAgIHJldHVybiBoKEFwcCk7CiAgfQp9KS4kbW91bnQoJyNhcHAnKTs="},{"version":3,"sources":["D:/JavaProgram/VSCode/health114/src/main.js"],"names":["Vue","App","router","store","ElementUI","use","axios","echarts","prototype","$echarts","config","productionTip","$http","render","h","$mount"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,sCAAP;AACAJ,GAAG,CAACK,GAAJ,CAAQD,SAAR;AACA,OAAOE,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACAP,GAAG,CAACQ,SAAJ,CAAcC,QAAd,GAAyBF,OAAzB;AAEAP,GAAG,CAACU,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAEAX,GAAG,CAACQ,SAAJ,CAAcI,KAAd,GAAsBN,KAAtB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIF,IAAIN,GAAJ,CAAQ;AACNE,EAAAA,MAAM,EAANA,MADM;AAENC,EAAAA,KAAK,EAALA,KAFM;AAGNU,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAACb,GAAD,CAAL;AAAA;AAHH,CAAR,EAIGc,MAJH,CAIU,MAJV","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport ElementUI from 'element-ui'\r\nimport 'element-ui/lib/theme-chalk/index.css'\r\nVue.use(ElementUI)\r\nimport axios from 'axios'\r\nimport echarts from 'echarts'\r\nVue.prototype.$echarts = echarts\r\n\r\nVue.config.productionTip = false\r\n\r\nVue.prototype.$http = axios\r\n//  定义异步请求 拦截器 所有的axios请求 发送之前 都会携带 headers.authentication  token数据\r\n// axios.interceptors.request.use(config => {\r\n//   console.log(config)\r\n//   config.headers.authentication = window.sessionStorage.getItem(\"token\")\r\n//   return config;\r\n// }, \r\n// function (error) {\r\n//   // 对请求错误做些什么\r\n//   return Promise.reject(error);\r\n// }\r\n\r\n// )\r\n\r\n\r\n// http response 拦截器\r\n// axios.interceptors.response.use(\r\n//   response => {\r\n//      //  对响应数据 处理\r\n//       return response;\r\n//   },\r\n//   error => {\r\n//     if (error.response) {\r\n//       switch (error.response.status) {\r\n//           case 403:\r\n//               // 返回 403 转到登录页面\r\n//                //跳转到主页\r\n//                window.sessionStorage.removeItem(\"token\")\r\n//                router.replace({ name: \"login\" });\r\n//       }\r\n//   }\r\n       \r\n//       return Promise.reject(error.response.data)   // 返回接口返回的错误信息\r\n//   });\r\n\r\n  //  定义路由拦截\r\n  // 语法 ：router.beforeEach（）一般用来做一些进入页面的限制。比如没有登录，就不能进入某些页面，\r\n  // 只有登录了之后才有权限查看某些页面。  to 表示需要访问的目标router  next 表示可以访问\r\n\r\n  // router.beforeEach((to,from,next)=>{\r\n  //   if(to.name != 'login'){\r\n  //     if(window.sessionStorage.getItem(\"token\")){\r\n  //       next()\r\n  //     }else{\r\n  //       next({path:'/'})\r\n  //     }\r\n  //   }else{\r\n  //     next()\r\n  //   } \r\n  // })\r\n\r\n\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n"]}]}