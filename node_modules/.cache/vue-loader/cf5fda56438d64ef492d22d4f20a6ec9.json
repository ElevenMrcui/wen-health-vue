{"remainingRequest":"D:\\JavaProgram\\VSCode\\health114_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JavaProgram\\VSCode\\health114_vue\\src\\views\\appoment\\setmeal.vue?vue&type=template&id=42f25808&scoped=true&","dependencies":[{"path":"D:\\JavaProgram\\VSCode\\health114_vue\\src\\views\\appoment\\setmeal.vue","mtime":1604818128642},{"path":"D:\\JavaProgram\\VSCode\\health114_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604539599577},{"path":"D:\\JavaProgram\\VSCode\\health114_vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1604539608319},{"path":"D:\\JavaProgram\\VSCode\\health114_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604539599577},{"path":"D:\\JavaProgram\\VSCode\\health114_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1604539608318}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}